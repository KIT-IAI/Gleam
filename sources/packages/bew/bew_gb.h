/* -----------------------------------------------------------------------------
GLEAM/AE                  Sprach-Header-File (Englisch)                         
Package: bew                     File: bew_gb.h              Version:     V1.4.1
Status : o.k.                   Autor: W.Jakob                 Datum: 21.09.2020
--------------------------------------------------------------------------------
This is free software, which is governed by the Lesser GNU Public Licence (LGPL), 
version 3, see the comment section at the end of the main program files or the 
files "schalter.h".
------------------------------------------------------------------------------ */

/* ----------------------- Texte des Moduls: bewert ------------------------- */
#define GNU_LABEL1N    "' title 'unweighted fitness' with lines lc rgbcolor \"#b600b6\" lw 1.5"
#define GNU_LABEL1S    "' title 'penalty factor' with lines lc rgbcolor \"#b600b6\" lw 1.5"
#define GNU_LABEL2A    "' title 'support points'"
#define GNU_LABEL2B    "' title 'Xthird'"
#define GNU_LABEL2C    "' title 'interp.points'"
#define GNU_LABEL3     "' title 'fulfillment' with impulses lc rgbcolor \"#00ee00\" lw 1.6"  /* lc 9  lw 2.0 */
#define GNU_IP_COL     " with impulses lc rgbcolor \"#dd0000\""
#define GNU_NOTE_TXT   "fitness [thd]"
#define GNU_STRAF_TXT  "penalty factor"
#define BEW_FKT_TXT    "assessment "
#define STR_FKT_TXT    "penalty "
#define BEW_FILE_HDR_1 "Assessment Description for GLEAM/AE                %s\n"
#define BEW_FILE_HDR_2 "%3d %3d       Number of active and used criteria from a total of %2d.\n"
#define BEW_FILE_STRFF "---------------- penalty functions: --------------- \n"
#define BEW_FILE_END_1 "Data per entry (KRITERIUMS_TYP):\n"
#define BEW_FILE_END_2 "  name with \":\" (max %d characters)\n"
#define BEW_FILE_END_3 "  unit:          criteria: standard unit identifier (\" \"=unused).\n"
#define BEW_FILE_END_4 "        penalty functions: out-of-range unit identifier:\n"
#define BEW_FILE_END_5 "                         <flag><blank><identifier>\n"
#define BEW_FILE_END_6 "                      flag = !: unused (empty)\n"
#define BEW_FILE_END_7 "                             <: 2nd output of 1000 times the value\n"
#define BEW_FILE_END_8 "                             >: 2nd output of the 1/1000 of the value\n"
#define BEW_FILE_END_9 "                             %%: 2nd utput in G format, if value < 1.0 or value >= 100000\n"
#define BEW_FILE_END10 "  class     max fitness  fullfilment value  | variable names: klasse  max_fitnes  erfuellungs_wert\n"
#define BEW_FILE_END11 "  eval fct  fitn-1  fitn-2  fitn-3  fitn-4  | variable names: bew_alg   nstart ns1 ns2 nend   nmax_cont\n"
#define BEW_FILE_END12 "            xval-1  xval-2  xval-3  xval-4  | variable names:  xstart xs1 xs2 xend   xdrittel\n"


/* ----------------------- Texte des Moduls: bew_gsw ------------------------ */
#define NOTEN_HDR1    "                          Assessment Criteria:"
#define NOTEN_HDR2    "Nr. Criterion            Prio.    Fitness   Fulfillment     Penalty Fmax"
#ifdef GUI_MODE
  #define NOTEN_HDR3  "                         Class     Weight  W.Fitn   Value PrioClass Cont"
#else /* TEXT_MODE oder CLV */
  #define NOTEN_HDR3  "                         Class      Share  W.Fitn   Value PrioClass Cont"
#endif /* TEXT_MODE oder CLV */
/*                     xx: 1234567890123456789:tttxxttt (xxxxxx%) xxxxxx xxxxxxx  tttxxttt xxxx*/
#define DEACTIV_TXT   "inactive"
#define ZEIG_FKT_TXT1 "type of function"
#define ZEIG_FKT_TXT2 "and"
#define ZEIG_FKT_TXT3 "Limits of function:"
#define ZEIG_FKT_TXT4 "               x-value fitness    [%]"
#define ZEIG_FKT_TXT5 "               x-value  penalty factor"
#define MINCR_TXT     "monotonically increasing"
#define MDECR_TXT     "monotonically decreasing"
#define LIN_TXT       "linear"
#define EXP_TXT       "exponential"
#define NIX_FKT_TXT   "not yet defined!"


/* ----------------------- Texte des Moduls: bew_cmen ----------------------- */
#define XMIN_TXT      "x-minimum"
#define XS1_TXT       "x-point1 "
#define XS2_TXT       "x-point2 "
#define XMAX_TXT      "x-maximum"
#define XD_TXT        "x-third  "
#define NS1_TXT       "FcnPoint1"
#define NS2_TXT       "FcnPoint2"
#define STR_S1_TXT    "PenalVal1"
#define STR_S2_TXT    "PenalVal2"
#define NKRIT_TXT_01  "criterion \"%s\":"
#define NKRIT_TXT_02  "  Remaining fitness value: %-6ld"
#define NKRIT_TXT_03  "Priority class (0=deactivation)  ["
#define NKRIT_TXT_04  "Fitness share    (0..%6ld) [%6ld]: "
#define NKRIT_TXT_05  "Fulfillment value          ["
#define NKRIT_TXT_05A "A fulfillment value can be specified only after the definition of the related fitness function."
#define NKRIT_TXT_05B " yet undefined"
#define NKRIT_TXT_06  "PrioClass of penalty fct.(0=Off) ["
#define NKRIT_TXT_07  "Fitness sum = %1ld instead of %1ld!"
#define NKRIT_TXT_08  "Maintain max fitness in case of x-limit surpassing "
#define NKRIT_TXT_10  "New designation"
#define NKRIT_TXT_12  "max. length: "
#define NKRIT_TXT_13  "New scale unit"
#define NKRIT_TXT_14  "With alternative measuring unit "JA_NEIN_TXT
#define NKRIT_TXT_15  "With alternative measuring unit "NEIN_JA_TXT
#define NKRIT_TXT_16  "Flag (<|>) and alt. scale unit   "
#define ZEIG_FKT_ABST " "
#define CHG_FKT_TXT1  "Penalty function for criterion \"%s\":"
#define CHG_FKT_TXT2  "Assessment function for criterion \"%s\":"
#define CHG_FKT_TXT3  "Function type: 1=IncrLin, 3=IncrExp, 5=IncrLinExp,"
#define CHG_FKT_TXT4  "               2=DecrLin, 4=DecrExp, 6=DecrLinExp"
#define CHG_FKT_TXT5  "Function type"
#define CHG_FKT_TXT6  "Fitness values (0 .. %ld):"
#define CHG_FKT_TXT7  "Penalty values (0.0 .. 1.0):"
#define BEW_MENPKT1   "Show Crit."
#define BEW_MENPKT2   "ChangeCrit"
#define BEW_MENPKT3   "New Crit."
#define BEW_MENPKT5   "ShowEvalF"
#define BEW_MENPKT6   "ChangeEval"
#define BEW_MENPKT7P  "PlotEvalF"
#define BEW_MENPKT7T  "TestEvalF"
#define BEW_MENPKT9   "ShowPenFct"
#define BEW_MENPKTA   "ChangePenF"
#define BEW_MENPKTBP  "PlotPenFct"
#define BEW_MENPKTBT  "TestPenFct"
#define BEW_MENPKTD   "Plot->File"
#define BEW_MENPKTE   "Quit Plots"
#define MENFKT2_TXT1  "                   Modification of a Criterion:"
#define MENFKT2_TXT2  "Select Criterion (1..%2d): "
#define MENFKT2_TXT3  "Select Criterion (1..%2d) [%2d]: "
#define MENFKT3_TXT1  "No more than %d criteria possible!"
#define MENFKT3_TXT2  "                  Definition of a new Criterion:"
#define MENFKT3_TXT3  "NewCrit %2d :"
#define MENFKT3_TXT4  "New criterion %2d   : "
#define MENFKT5_TXT0  "           Parameter Display of an Assessment Function:"
#define MENFKT6_TXT1  "      Modification of the Assessment Function of a Criterion:"
#define MENFKT7_TXT1  "          Test of the Assessment Function of a Criterion:"
#define MENFKT7_TXT2  "    x-value  fitness  [%]"
#define MENFKT9_TXT0  "             Parameter Display of a Penalty Function:"
#define MENFKT9_TXT1  "Criterion \"%s\" has no active penalty function!"
#define MENFKT10_TXT1 "       Modification of the Penalty Function of a Criterion:"
#define MENFKT11_TXT1 "           Test of the Penalty Function of a Criterion:"
#define MENFKT11_TXT2 "    x-value  penalty factor"
#define MENFKT13_TXT1 "      Hardcopy of the last plot"
#define MENFKT13_TXT2 "          (postscript file)"
#define MENFKT13_TXT3 "Hardcopy requires previous execution of \"PlotxxxFct\"!"
#define MENFKT14_TXT1 "           Close GnuPlot Windows"
#define MENFKT14_TXT2 "No GnuPlot active"
#define HCPY_MLDG     "Hardcopy in \"%s.ps\"\n"
#define PREP_GNU_TXT1 "number of x values        [%3u]: "
#define PREP_GNU_TXT2 "x start value     [%s]: "
#define PREP_GNU_TXT3 "delta of x values [%s]: "
#define PREP_GNU_TXT4 "plot window number (1..%d)   [%d]: "
#define PREP_GNU_KRIT "Criterion"
#define PREP_GNU_StrF "Penalty Function"
#define NIX_PLOT_TXT  "GNUPlot not available."
#define NO_CRITS_TXT  "     The criteria list is empty!"
